<Window x:Class="PlaylistManager.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:jas="clr-namespace:WPF.JoshSmith.ServiceProviders.UI"
    xmlns:local="clr-namespace:PlaylistManager"
    Title="ListViewDragDropManager Demo" Height="550" Width="750"
    FontSize="12"
    WindowStartupLocation="CenterScreen"
    >
  <Window.Resources>
    <Style x:Key="ItemContStyle" TargetType="ListViewItem">
      <Style.Resources>
        <LinearGradientBrush x:Key="MouseOverBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
          <GradientStop Color="#22000000" Offset="0" />
          <GradientStop Color="#44000000" Offset="0.4" />
          <GradientStop Color="#55000000" Offset="0.6" />
          <GradientStop Color="#33000000" Offset="0.9" />
          <GradientStop Color="#22000000" Offset="1" />
        </LinearGradientBrush>
      </Style.Resources>
      <Setter Property="Padding" Value="0,4" />
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <!-- The default control template for ListViewItem has a Border 
           which contains the item's content. -->
      <Setter Property="Border.BorderThickness" Value="0,0,0,0.5" />
      <Setter Property="Border.BorderBrush" Value="LightGray" />
      <!-- These triggers react to changes in the attached properties set
           during a managed drag-drop operation. -->
      <Style.Triggers>
        <Trigger Property="jas:ListViewItemDragState.IsBeingDragged" Value="True">
          <Setter Property="FontWeight" Value="DemiBold" />
        </Trigger>
        <Trigger Property="jas:ListViewItemDragState.IsUnderDragCursor" Value="True">
          <Setter Property="Background" Value="{StaticResource MouseOverBrush}" />
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="BusyButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="MinHeight" Value="23" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                        Background="#C0C0C0"
                        BorderBrush="#404040"
                        BorderThickness="1"
                        CornerRadius="2">
                        <ContentPresenter Margin="0,0,0,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Red" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    </Window.Resources>

    <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="0" />
      <RowDefinition Height="*" />
      <RowDefinition Height="0" />
    </Grid.RowDefinitions>
    
    <StackPanel Orientation="Horizontal" Grid.Row="0">
        <Label>MP3s: </Label>
        <TextBox Height="25" Name="folderLocation" Width="450" Text="C:\Arabic" />
        <Button Content="Choose Folder" Height="23" Name="chooseFolder" Width="109" />
        <Button Content="Scan" Height="23" Name="scanFiles" Width="120" />
    </StackPanel>
    <StackPanel Orientation="Horizontal" Grid.Row="1">
        <Label>Playlist: </Label>
        <TextBox Height="25" Name="playlistLocation" Width="450" Text="C:\Arabic\Arabic.m3u" />
        <Button Content="Choose Playlist" Height="23" Name="choosePlaylist" Width="100" />
        <Button Content="Load Playlist" Height="23" Name="sortFiles" Width="120" />
    </StackPanel>
    <StackPanel Orientation="Horizontal" Grid.Row="2">
        <Label>Destination: </Label>
        <TextBox Height="25" Name="copyLocation" Width="450" Text="F:\Arabic" />
        <Button Content="Choose Folder" Height="23" Name="chooseCopyFolder" Width="100" />
        <Button Content="Copy Files" Height="23" Name="updateFiles" Width="97" Style="{DynamicResource BusyButton}" />
    </StackPanel>
      
    <GroupBox Header="Main ListView Settings" Grid.Row="3" Margin="4" Padding="2">
      <StackPanel>
        <StackPanel.Resources>
          <Style TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="IsChecked" Value="True" />
          </Style>
        </StackPanel.Resources>
        <CheckBox 
          Name="chkManageDragging" 
          Margin="4"
          Visibility="Hidden"
          >
          Manage Dragging of ListViewItems
        </CheckBox>
          <StackPanel Margin="4" IsEnabled="{Binding ElementName=chkManageDragging, Path=IsChecked}">
          <CheckBox 
            Name="chkDragAdorner" 
            Margin="0,4" 
            Visibility="Hidden"
            >
            Show Drag Adorner
          </CheckBox>
          <StackPanel Orientation="Horizontal" Margin="0,4" IsEnabled="{Binding ElementName=chkDragAdorner, Path=IsChecked}" Visibility="Hidden">
            <Label>Drag Adorner Opacity:</Label>
            <Slider Name="sldDragOpacity" Value="0.7" Minimum="0" Maximum="1" Width="90" Margin="4" />
            <Label Content="{Binding ElementName=sldDragOpacity, Path=Value}" />
          </StackPanel>
        </StackPanel>
        <Line Stroke="DarkGray" Stretch="Fill" StrokeThickness="0.5" X1="0" X2="1" />
        <CheckBox 
          Name="chkApplyContStyle" 
          Margin="4,8,4,4"
          ToolTip="If checked, the ListView's ItemContainerStyle is set to a Style which reacts to the drag operation."
          Visibility="Hidden"
          >
          Apply Item Container Style
        </CheckBox>
        <CheckBox 
          Name="chkSwapDroppedItem" 
          IsChecked="False" 
          Margin="4" 
          ToolTip="If checked, the dropped item and the item at the target index will exchange locations."
          Visibility="Hidden"
          >
          Use Custom Drop Logic
        </CheckBox>
        <CheckBox 
          Name="chkShowOtherListView" 
          IsChecked="False"
          Margin="4" 
          ToolTip="If checked, another ListView is visible.  The items from one ListView can be dropped into the other ListView."
          Visibility="Hidden"
          >
          Show Other ListView
        </CheckBox>
      </StackPanel>
    </GroupBox>

    <StackPanel Orientation="Horizontal" Grid.Row="4">
      <ListView Name="listView"       
        ItemContainerStyle="{StaticResource ItemContStyle}"
        Width="600"
        Margin="4" 
        Padding="2"
        SelectionMode="Single"
        >
        <ListView.View>
          <GridView>
            <!--<GridViewColumn Header="Finished">
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <CheckBox IsChecked="{Binding Finished}" HorizontalAlignment="Center" />
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="Duration" DisplayMemberBinding="{Binding Duration}" Width="80" />-->
            <GridViewColumn Header="Name" Width="175">
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <Label Content="{Binding Name}" Foreground="{Binding HighlightColor}" />
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Width="auto">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <Button Content="Remove From List" Click="DeleteSubject" CommandParameter="{Binding Name}"
                                Command="{Binding ElementName=Window,Path=DataContext.RemoveSubjectCommand}" />
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <!--<GridViewColumn Header="Description" DisplayMemberBinding="{Binding Description}" Width="340" />-->
          </GridView>
        </ListView.View>
      </ListView>
      <StackPanel VerticalAlignment="Center" Width="75">
        <TextBlock TextWrapping="Wrap" Width="75" Height="150">Red entries are missing files. <LineBreak/>Orange are files not on the playlist.</TextBlock>
        <Button Content="Move Up" Height="23" Name="moveUp" Width="75" Grid.Row="3"/>
        <Button Content="Move Down" Height="23" Name="moveDown" Width="75" Grid.Row="3"/>
      </StackPanel>
    </StackPanel>

    <ListView Name="listView2"
      Grid.Row="5"  
      Height="185" 
      ItemContainerStyle="{StaticResource ItemContStyle}"
      Margin="4" 
      Padding="2"
      SelectionMode="Single"
      Visibility="Collapsed"
      >
      <ListView.View>
        <GridView>
          <GridViewColumn Header="Finished">
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <CheckBox IsChecked="{Binding Finished}" HorizontalAlignment="Center" />
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
          <GridViewColumn Header="Duration" DisplayMemberBinding="{Binding Duration}" Width="80" />
          <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" Width="175" />
          <GridViewColumn Header="Description" DisplayMemberBinding="{Binding Description}" Width="340" />
        </GridView>
      </ListView.View>
    </ListView>
  </Grid>
</Window>
